/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

 #include <behaviors.dtsi>
 #include <dt-bindings/zmk/keys.h>
 #include <dt-bindings/zmk/bt.h>
 #include <dt-bindings/zmk/rgb.h>
 #include <dt-bindings/zmk/ext_power.h>
 #include <dt-bindings/zmk/outputs.h>

 #define DEFAULT 0
 #define LOWER  1
 #define RAISE  2
 #define ADJUST 3

/* NOTE: At the time of the creation of this keymap, there are no specified codes for 'eisuu' and 'kana' input in ZMK.
However, 'LANG1' and 'LANG2' are fully-functioning candidates for 'kana' and 'eisuu' input respectively.
As such, those are in use within the default layer at this time.*/

/ {
       keymap {
              compatible = "zmk,keymap";
 
              default_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |  TILDE |   1    |   2    |   3    |   4    |   5    |                                      |   6    |   7    |   8    |   9    |   0    |   +    |
 // |  DEL   |   Q    |   W    |   E    |   R    |   T    |                                      |   Y    |   U    |   I    |   O    |   P    |   -    |
 // |  TAB   |   A    |   S    |   D    |   F    |   G    |                                      |   H    |   J    |   K    |   L    |   '    |   ;    |
 // |   /    |   Z    |   X    |   C    |   V    |   HOME |  END   |                    |  ENTER |   B    |   N    |   M    |   ,    |  UP    |   .    |
 // |  CTRL  |  WIN   |  ALT   |        | SPACE  |        |  FN    |                    |  BPSC  |        | LSHIFT |        |  LEFT  |  DOWN  |  RIGHT |
                     bindings = <
       &kp GRAVE  &kp N1   &kp N2   &kp N3   &kp N4    &kp N5                               &kp N6    &kp N7     &kp N8    &kp N9     &kp N0    &kp PLUS
       &kp DEL    &kp Q    &kp W    &kp E    &kp R     &kp T                                &kp Y     &kp U      &kp I     &kp O      &kp P     &kp MINUS
       &kp TAB    &kp A    &kp S    &kp D    &kp F     &kp G                                &kp H     &kp J      &kp K     &kp L      &kp APOS  &kp SEMI
       &kp SLASH  &kp Z    &kp X    &kp C    &kp V     &kp HOME &kp END         &kp RET     &kp B     &kp N      &kp M     &kp COMMA  &kp UP    &kp PERIOD
       &kp LCTRL  &kp LGUI &kp LALT &kp LALT &kp SPACE &kp RET  &mo ADJUST      &kp BSPC    &kp BSPC  &kp LSHIFT &kp RALT  &kp LEFT   &kp DOWN  &kp RIGHT
      >;
              };
              lower_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |      |      |      |      |      |      |                                  |      |      |      |      |      |      |
 // |  ~   |  !   |  @   |  #   |  $   |  %   |                                  |  ^   |  &   |  *   |  (   |  )   |      |
 // |      |      |      |      |      |      |                                  |      |c   |  +   |  {   |  }   | PIPE |
 // |      |      |      |      |      |      |  (   |                    |  )   |      |      |      | HOME | END  |      |
 // |      |      |      |      |      |      |      |                    |      |      |      |      |      |      |      |
                     bindings = <
       &trans    &trans   &trans &trans   &trans   &trans                             &trans    &trans    &trans    &trans   &trans   &trans
       &kp TILDE &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT                          &kp CARET &kp AMPS  &kp ASTRK &kp LPAR &kp RPAR &trans
       &trans    &trans   &trans &trans   &trans   &trans                             &trans    &kp UNDER &kp PLUS  &kp LBRC &kp RBRC &kp PIPE
       &trans    &trans   &trans &trans   &trans   &trans    &kp LPAR        &kp RPAR &trans    &trans    &trans    &kp HOME &kp END  &trans
       &trans    &trans   &trans &trans   &trans   &trans    &trans          &trans   &trans    &trans    &trans    &trans   &trans   &trans
                     >;
              };
              raise_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |       |       |       |       |       |       |                                    |       |       |       |       |       |       |
 // |   `   |   1   |   2   |   3   |   4   |   5   |                                    |   6   |   7   |   8   |   9   |   0   |  DEL  |
 // |       |  F1   |  F2   |  F3   |  F4   |  F5   |                                    |  F6   |   -   |   =   |   [   |   ]   |   \   |
 // |       |  F7   |  F8   |  F9   |  F10  |  F11  |       |                    |       |  F12  |       | PSCRN | PG_DN | PG_UP |       |
 // |       |       |       |       |       |       |       |                    |       |       |       | NEXT  | VOL-  | VOL+  | PLAY  |
                     bindings = <
       &trans    &trans &trans &trans &trans  &trans                       &trans  &trans    &trans     &trans       &trans       &trans
       &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4  &kp N5                       &kp N6  &kp N7    &kp N8     &kp N9       &kp N0       &kp DEL
       &trans    &kp F1 &kp F2 &kp F3 &kp F4  &kp F5                       &kp F6  &kp MINUS &kp EQUAL  &kp LBKT     &kp RBKT     &kp BSLH
       &trans    &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &trans        &trans &kp F12 &trans    &kp PSCRN  &kp PG_DN    &kp PG_UP    &trans
       &trans    &trans &trans &trans &trans  &trans  &trans        &trans &trans  &trans    &kp C_NEXT &kp C_VOL_DN &kp C_VOL_UP &kp C_PP
                     >;
              };
              adjust_layer {
 // ---------------------------------------------------------------------------------------------------------------------------------
 // |    ESC   |    F1    |    F2    |    F3    |    F4    |    F5    |                                          |   F6     |   F7     |   F8     |   F9     |    F10   |   F11    |
 // |   BSPC   | BT SEL0  | BT SEL1  | BT SEL2  | BGT SEL3 | BT SEL4  |                                          |          |          |          |          |   PSCRN  |   F12    |
 // |   shftab | OUT TOG  | OUT USB  | OUT BLE  |  bri dn  |   bri up |                                          |          |          |          |          |          |          |
 // |   BSLH   |          |  BT CLR  |   BT PRV |  BT NXT  |   voldn  |  volup   |                    |  CAPS    |          |          |          |    {     |          |    }     |
 // |   ctrl   |  win     |  RALT    |          |  rshift  |          |          |                    |  DEL     |          |   space  |          |          |          |          |
                     bindings = <
       &kp ESC     &kp F1       &kp F2       &kp F3       &kp F4       &kp F5                                     &kp F6        &kp F7      &kp F8        &kp F9         &kp F10        &kp F11
       &kp BSPC    &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                               &trans        &trans      &trans        &trans         &kp PSCRN      &kp F12
       &kp LS(TAB) &out OUT_TOG &out OUT_USB &out OUT_BLE &kp C_BRI_DN &kp C_BRI_UP                               &trans        &trans      &trans        &trans         &trans         &trans        
       &kp BSLH    &trans       &bt BT_CLR   &bt BT_PRV   &bt BT_NXT   &kp C_VOL_DN &kp C_VOL_UP        &kp CAPS  &trans        &trans      &trans        &kp LBKT       &trans         &kp RBKT
       &kp RCTRL   &kp RGUI     &kp RALT     &trans       &kp RSHIFT   &trans       &trans              &kp DEL   &kp SPACE     &kp SPACE   &trans        &trans         &trans         &trans
                     >;
              };
       };
};
